// Generated by CoffeeScript 1.7.1
(function() {
  var Search, cheerio, clean_string, defs, request, url,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  cheerio = require('cheerio');

  request = require('request');

  url = require('url');

  defs = require('./defs');

  clean_string = require('./utils').clean_string;

  Search = (function() {
    function Search(options) {
      this.options = options != null ? options : {};
      this.perform = __bind(this.perform, this);
      this.parseHTML = __bind(this.parseHTML, this);
      this.getUrl = __bind(this.getUrl, this);
      this.handleOptions = __bind(this.handleOptions, this);
      this.handleOptions();
    }

    Search.prototype.handleOptions = function() {
      var _base, _base1, _base10, _base11, _base12, _base13, _base14, _base15, _base16, _base2, _base3, _base4, _base5, _base6, _base7, _base8, _base9;
      if ((_base = this.options).protocol == null) {
        _base.protocol = 'http';
      }
      if ((_base1 = this.options).hostname == null) {
        _base1.hostname = 'www.leboncoin.fr';
      }
      if ((_base2 = this.options).category == null) {
        _base2.category = 'annonces';
      }
      if ((_base3 = this.options).debug == null) {
        _base3.debug = false;
      }
      if ((_base4 = this.options).verbose == null) {
        _base4.verbose = false;
      }
      if ((_base5 = this.options).page == null) {
        _base5.page = 1;
      }
      if ((_base6 = this.options).shouldbe == null) {
        _base6.shouldbe = '';
      }
      if ((_base7 = this.options).query == null) {
        _base7.query = null;
      }
      if ((_base8 = this.options).region == null) {
        _base8.region = 'ile_de_france';
      }
      if ((_base9 = this.options).department == null) {
        _base9.department = null;
      }
      if ((_base10 = this.options).urgency_only == null) {
        _base10.urgency_only = false;
      }
      if ((_base11 = this.options).sort_by_price == null) {
        _base11.sort_by_price = false;
      }
      if ((_base12 = this.options).hide_photos == null) {
        _base12.hide_photos = false;
      }
      if ((_base13 = this.options).in_title == null) {
        _base13.in_title = false;
      }
      if ((_base14 = this.options).url == null) {
        _base14.url = false;
      }
      if ((_base15 = this.options).location == null) {
        _base15.location = null;
      }
      return (_base16 = this.options).category_attrs != null ? _base16.category_attrs : _base16.category_attrs = {};
    };

    Search.prototype.getUrl = function() {
      var k, pathname, query, v, _ref, _ref1;
      if (this.options.url) {
        return this.options.url;
      }
      pathname = "" + this.options.category + "/offres/" + this.options.region + "/";
      if (this.options.department != null) {
        pathname += "" + this.options.department + "/";
      }
      query = {};
      if (this.options.page > 1) {
        query.o = parseInt(this.options.page, 10);
      }
      if (this.options.query) {
        query.q = this.options.query;
      }
      if ((_ref = this.options.filter) === 'c' || _ref === 'p') {
        query.f = this.options.filter;
      }
      if (this.options.urgency_only) {
        query.ur = 1;
      }
      if (this.options.sort_by_price) {
        query.sp = 1;
      }
      if (this.options.hide_photos) {
        query.th = 0;
      }
      if (this.options.in_title) {
        query.it = 1;
      }
      if (this.options.location) {
        query.location = this.options.location;
      }
      _ref1 = this.options.category_attrs;
      for (k in _ref1) {
        v = _ref1[k];
        query[k] = v;
      }
      return url.format({
        hostname: this.options.hostname,
        protocol: this.options.protocol,
        pathname: pathname,
        query: query
      });
    };

    Search.prototype.parseHTML = function(html) {
      var $, date, entry, line, opts, results, _i, _j, _len, _len1, _ref, _ref1;
      results = [];
      opts = {
        normalizeWhitespace: true,
        decodeEntities: true
      };
      $ = cheerio.load(html, opts);
      _ref = $('.list-lbc > a');
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        entry = _ref[_i];
        date = [];
        _ref1 = $(entry).find('.date div');
        for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
          line = _ref1[_j];
          date.push(clean_string($(line).html()));
        }
        results.push({
          href: entry.attribs.href,
          title: entry.attribs.title,
          date: date,
          location: clean_string($(entry).find('.placement').html()),
          price: clean_string($(entry).find('.price').html()),
          image: $(entry).find('.image img').attr('src')
        });
      }
      return results;
    };

    Search.prototype.perform = function(callback) {
      var _url;
      _url = this.getUrl();
      return request(_url, (function(_this) {
        return function(error, response, html) {
          var results;
          results = _this.parseHTML(html);
          return callback({
            error: error,
            response: response,
            html: html,
            results: results
          });
        };
      })(this));
    };

    return Search;

  })();

  module.exports = Search;

}).call(this);
